#!/bin/sh
set -evx

PREFIX=
. $PREFIX/lib/libalpine.sh

###############################################################################
###############################################################################
###############################################################################

usage() {
	cat <<-__EOF__
		usage: setup-alpine-daily-use [-h] [-d] [-u username] [-r git remote repository] [-l git local path]

		options:
		 -d  Don't assign a password to daily use user
		 -h  Show this help
		 -l  Daily use user dotfiles git local path
		 -r  Daily use user dotfiles git remote repository uri
		 -u  Daily use user username
	__EOF__
	exit 1
}

while getopts "dhl:r:u:" opt; do
	case $opt in
		d) DAILYUSERNOPASS=1;;
		h) usage;;
		l) GITLOCALPATH="$OPTARG";;
		r) GITREPOSITORY="$OPTARG";;
		u) DAILYUSER="$OPTARG";;
	esac
done
shift $(($OPTIND - 1))

###############################################################################
###############################################################################
###############################################################################

setup_custom_keymap() {
  	local conf="$ROOT/etc/conf.d/loadkmap"
  	local name="us-intl-ctrlswapcaps.bmap.gz"

	# Custom us-intl keyboard layout with the hardcoded kdb option ctrl:swapcaps
	cat <<-__EOF__ | base64 -d > /etc/keymap/$name
		H4sIAAAAAAAAA+2VWVMcVRTHz7m3b/e/5wzDsO8hCMQs7DuGYMy+h+xk00BCNkJCEpJAAPkqUcsH
		y5Tluw9+Aqvim+V3sKrn1SdvDzOyZMKgDlVovKe6H27fXn79O+fc0fGxmYmRSV416H0bqoraqYM6
		qYu6qYd6qY/6qY2aaQ8tkE+P5YWMyROZkhl5JvfkkUzKVbpOrDw1Ik/lltyWO3JX7su4PJDdxA45
		5F2jlzItN+W5jMpDmZAmaqFWIi+qtbeVlEf2TyvW7LBhlz0G+wzlK09D+1q0o412dUSzVlpr0nHt
		KlIDFGFhUssjppWXp2OKPaOKWbvlzK5yy5jcCi7hUq7kKOdxFVdznAt0zaq7w6iiOtpL9dRAjaSc
		bbSTttMO+ox2JfnPyCU5KGflvFyWC3JUTsuQzNJ8kv8TOScH5JAcliNyTI7LCfmIHEdb/jm6IsOy
		Xy7KPjklJ2WABunjZfzhN8U4P/wmLuQi3sK1ll9n4R+krVyXhV9Umj+i1sdP6osgPDfQ6zekZim0
		O0/XaPFa6P/1m++CKfk6+F1+k1+Cr+zqz1P+RxIr/ZOy/hV5dkViWr4MQv8J6//b4Ifgx2CR/1Vg
		+U2eiZl8EzcFptAUmWJTYqBUFv45KjVlJtf+147l/n+Vn+T7YEjC+UX/NxIr/S/xzyeG5Zsg9P+z
		9Z96WpKfLGamN8Eea/NnihzxUxVVUw1toVqb9eFMrT3DHgVURoYKqZgqqMTWQz7F7dqapH+mIlvs
		rsUFRUgoSmFp2+FVUyWVk6ZS+6gY5dn5mFpI5X+46AOu5wZu5G38IW/nHbyTd9n8d7LyN3Fzzut/
		kX/1TG1qJhN/2n8m/kXPpFbz0xK/9d/CrdzG7dzBndzF3dzDvbwe/33cvzH874zc8f+T/I+qv5f/
		UfXf4N/I+q9COzrQiS50owe96EM/2tCMPViAqx7jBcbwBFOYwTPcwyNM4iquIw+2/+MpbuE27uAu
		7mMcD7Ab7NyA3f/xEtO4iecYxUNMoAktaEVq/4PlN2yU0cYxxrjGMzC+Se7/Pnzft/y+8V3f8vvK
		1z75qf0fESNZ+39cFai/lv912It6NKARn2L1tTO4hIM4i/O4jAs4itMYwizmkez/OIcDOITDOIJj
		OI4T6bu9OVzBMPbjIvbhFE5iAIPYrP7Xjkz+0/n/tv+l/F/pfzPn/9qRyX+a/93+Sa30/+/lL0AZ
		DApRjAqUwEc+4n/yM4rgwIUHIAJBdBl/JcqhUQqFmO0Vb/FnrP/s/X899Z/j/r8x/O+7///5Nwn/
		H3idN5wHEQAA
	__EOF__

  	[ -f "$conf" ] && sed -i '/^KEYMAP=/d' "$conf"
  	echo "KEYMAP=/etc/keymap/$name" >> "$conf"
  	rc-service loadkmap restart
}

setup_syslinux() {
	sed -i \
		-e "s:^modules=\(.*\):modules=\1$kernel_modules:" \
		-e "s:^default_kernel_opts=\"\(.*\)\":default_kernel_opts=\"\1$kernel_opts\":" \
		-e "s:^timeout=.*:timeout=1:" \
		/etc/update-extlinux.conf

	update-extlinux
}

setup_grub() {
	sed -i \
		-e "s:^GRUB_CMDLINE_LINUX_DEFAULT=\"modules=\(\S*\) \(.*\)\":GRUB_CMDLINE_LINUX_DEFAULT=\"modules=\1$kernel_modules \2$kernel_opts\":" \
		-e "s:^GRUB_TIMEOUT=.*:GRUB_TIMEOUT=0:" \
		/etc/default/grub

	grub-mkconfig -o /boot/grub/grub.cfg
}

setup_daily_use_apps() {
	apk add \
		doas \
		docs \
		less \
  		curl \
  		tmux \
  		vim \
		mutt \
		newsboat \
  		git \
  		gnupg \
  		pass \
		util-linux-misc \
  		pciutils \
  		usbutils \
  		ncurses \
		htop \

	apk add \
  		gnupg-scdaemon \
		yubikey-manager \
		pcsc-lite \

	apk add \
		build-base \
  		nodejs \
  		npm \
  		rustup \

	apk add \
  		wireguard-tools \
  		iptables \
  		tor \

	apk add \
		packer \
		qemu-img \
		qemu-system-x86_64 \
		qemu-modules \

	apk add \
		dbus \
		sway \
		xwayland \
		wl-clipboard \
		seatd \
		alacritty \
		firefox \
		pam-u2f \
		bemenu \
		ttf-dejavu \
		mesa-dri-gallium \
		hicolor-icon-theme \
		xdg-desktop-portal \
		xdg-desktop-portal-wlr \

	apk add \
		pipewire \
		pipewire-pulse \
		pipewire-alsa \
		pipewire-tools \
		pipewire-spa-bluez \
		wireplumber \
		rtkit \
		bluez \
		bluez-openrc \

	apk add \
		docker \
		docker-compose \

	apk add \
  		obfs4proxy \
  		bluetuith \
		pw-volume \
  		--repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \

	echo "permit persist :wheel" >> /etc/doas.d/doas.conf

	# Very basic rules just to get started
	cat <<-__EOF__ >> /etc/iptables/rules-save
		*filter
		:INPUT DROP [0:0]
		:FORWARD DROP [0:0]
		:OUTPUT ACCEPT [0:0]
		-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
		-A INPUT -i lo -j ACCEPT
		COMMIT
	__EOF__

	rc-update add dbus
	rc-update add iptables
	rc-update add local
	rc-update add seatd
	rc-update add bluetooth
	rc-update add docker boot
	rc-update add pcscd
	rc-service dbus start
	rc-service iptables start
	rc-service local start
	rc-service seatd start
	rc-service bluetooth start
	rc-service docker start
	rc-service pcscd start

	# WLR requires the XDG_RUNTIME_DIR variable to be set.
	# https://wiki.alpinelinux.org/wiki/Wayland
	cat <<-__EOF__ >> /etc/profile.d/xdg_runtime_dir.sh
		if test -z "\${XDG_RUNTIME_DIR}"; then
		  export XDG_RUNTIME_DIR=/tmp/\$(id -u)-runtime-dir
		  if ! test -d "\${XDG_RUNTIME_DIR}"; then
		    mkdir "\${XDG_RUNTIME_DIR}"
		    chmod 0700 "\${XDG_RUNTIME_DIR}"
		  fi
		fi
	__EOF__

	### # VFIO
	### cat <<-__EOF__ >> /etc/mkinitfs/features.d/vfio.modules
	### 	kernel/drivers/vfio/vfio.ko.*
	### 	kernel/drivers/vfio/vfio_virqfd.ko.*
	### 	kernel/drivers/vfio/vfio_iommu_type1.ko.*
	### 	kernel/drivers/vfio/pci/vfio-pci.ko.*
	### __EOF__

	### sed -i -e \
	### 	"s:^features=\"\(.*\)\":features=\"\1 vfio\":" \
	### 	/etc/mkinitfs/mkinitfs.conf

	### # 10de:13c2 = GTX 970
	### # 10de:0fbb = GTX 970 audio device
	### # 10de:1c03 = GTX 1060 6GB
	### # 10de:10f1 = GTX 1060 6GB audio device
	### # 10de:1e07 = RTX 2080 ti
	### # 10de:10f7 = RTX 2080 ti audio device
	### # 10de:1ad6 = RTX 2080 ti usb device
	### # 10de:1ad7 = RTX 2080 ti serial bus
	### cat <<-__EOF__ >> /etc/modprobe.d/vfio.conf
	### 	options vfio-pci ids=10de:13c2
	### 	options vfio_iommu_type1 allow_unsafe_interrupts=1
	### 	softdep igb pre: vfio-pci
	### __EOF__

	### mkinitfs
	
	cp -a /usr/share/pipewire /etc
	cp -a /usr/share/wireplumber /etc

	sed -i -e \
		"s:\[\"with-logind\"\] = true,:\[\"with-logind\"\] = false,:" \
		/etc/wireplumber/bluetooth.lua.d/50-bluez-config.lua

	rustup-init -y --default-toolchain nightly
	npm install -g yarn && yarn set version berry
}

setup_daily_user() {
	if [ -n "$DAILYUSER" ];then
		dailyuser="$DAILYUSER"
	else
		ask "Daily use user username? (e.g 'alice')" "$dailyuser"
		dailyuser="$resp"
	fi

	if [ "$DAILYUSERNOPASS" = 1 ];then
		adduser -D $dailyuser
		passwd -u $dailyuser
	else
		adduser $dailyuser
	fi

	# cat <<-__EOF__ >> /etc/local.d/sway.start
	# 	#!/bin/sh
	# 	[ -f /usr/sbin/sway-launcher ] && sway-launcher $dailyuser 7 || true
	# __EOF__
	# chmod +x /etc/local.d/sway.start

	adduser $dailyuser wheel
	adduser $dailyuser input
	adduser $dailyuser audio
	adduser $dailyuser video
	adduser $dailyuser rtkit
	adduser $dailyuser gnupg
	adduser $dailyuser seat
	adduser $dailyuser qemu
	adduser $dailyuser kvm
	adduser $dailyuser plugdev # pam-u2f
	adduser $dailyuser docker

	setup_dotfiles "$dailyuser"
}

setup_dotfiles() {
	local gitlocalpath="/home/$1/.config/dotfiles"
	local gitrepository="https://github.com/$1/dotfiles"
	local home="/home/$1"

	while [ ! -d "$gitlocalpath/.git" ]; do
		if [ -n "$GITLOCALPATH" ];then
			gitlocalpath="$GITLOCALPATH"
		else
			ask "git local path?" "$gitlocalpath"
			gitlocalpath="$resp"
		fi

		if [ -n "$GITREPOSITORY" ];then
			gitrepository="$GITREPOSITORY"
		else
			ask "git remote repository?" "$gitrepository"
			gitrepository="$resp"
		fi

		git clone "$gitrepository" "$gitlocalpath"

		chown -R $1:$1 "$gitlocalpath"
	done

	install -d -m 0700 -o "$1" -g "$1" $home/.config || true

	[ -s "$gitlocalpath/.profile" ]                        && ln -sf $gitlocalpath/.profile $home || true
	[ -s "$gitlocalpath/.alias" ]                          && ln -sf $gitlocalpath/.alias $home || true
	[ -s "$gitlocalpath/.gitconfig" ]                      && ln -sf $gitlocalpath/.gitconfig $home || true
	[ -s "$gitlocalpath/.tmux.conf" ]                      && ln -sf $gitlocalpath/.tmux.conf $home || true
	[ -s "$gitlocalpath/.vimrc" ]                          && ln -sf $gitlocalpath/.vimrc $home || true
	[ -s "$gitlocalpath/.gitconfig" ]                      && ln -sf $gitlocalpath/.gitconfig $home || true
	[ -d "$gitlocalpath/.gnupg" ]                          && install -d -m 0700 -o "$1" -g "$1" $home/.gnupg || true
	[ -s "$gitlocalpath/.gnupg/gpg-agent.conf" ]           && ln -sf $gitlocalpath/.gnupg/gpg-agent.conf $home/.gnupg/gpg-agent.conf || true
	[ -s "$gitlocalpath/.gnupg/gpg.conf" ]                 && ln -sf $gitlocalpath/.gnupg/gpg.conf $home/.gnupg/gpg.conf || true
	[ -s "$gitlocalpath/.mutt" ]                           && ln -sf $gitlocalpath/.mutt $home || true
	[ -d "$gitlocalpath/.config/sway" ]                    && install -d -m 0700 -o "$1" -g "$1" $home/.config/sway || true
	[ -s "$gitlocalpath/.config/sway/config" ]             && ln -sf $gitlocalpath/.config/sway/config $home/.config/sway/config || true
	[ -d "$gitlocalpath/.config/qutebrower" ]              && install -d -m 0700 -o "$1" -g "$1" $home/.config/qutebrowser || true
	[ -s "$gitlocalpath/.config/qutebrowser/config" ]      && ln -sf $gitlocalpath/.config/qutebrowser/config $home/.config/qutebrower/config || true
	[ -d "$gitlocalpath/.config/alacritty" ]               && install -d -m 0700 -o "$1" -g "$1" $home/.config/alacritty || true
	[ -s "$gitlocalpath/.config/alacritty/alacritty.yml" ] && ln -sf $gitlocalpath/.config/alacritty/alacritty.yml $home/.config/alacritty/alacritty.yml || true
}

###############################################################################
###############################################################################
###############################################################################

apk update

kernel_modules=""
### kernel_modules="$kernel_modules,vfio"
### kernel_modules="$kernel_modules,vfio-pci"
### kernel_modules="$kernel_modules,vfio_iommu_type1"
### kernel_modules="$kernel_modules,vfio_virqfd"

kernel_opts=""
kernel_opts="$kernel_opts ipv6.disable=1"
### kernel_opts="$kernel_opts hid_apple.swap_opt_cmd=1"
kernel_opts="$kernel_opts hid_apple.fnmode=2"
### kernel_opts="$kernel_opts amd_iommu=on"
### kernel_opts="$kernel_opts intel_iommu=on"
### kernel_opts="$kernel_opts iommu=pt"

[ -s "/etc/update-extlinux.conf" ] && setup_syslinux || true
[ -s "/etc/default/grub" ] && setup_grub || true
 
setup_custom_keymap
setup_daily_use_apps
setup_daily_user
